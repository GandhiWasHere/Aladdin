@model IEnumerable<Aladdin.Controllers.StatisticsController.CustomerAddressView>
@{
    Layout = "~/Views/Shared/_LayoutNOHEADERFOOTER.cshtml";
    ViewData["Title"] = "Index";
    List<string> address = new List<String>();
    List<int> counter = new List<int>();
    foreach (var item in Model)
    {
        address.Add(item.Address);
        counter.Add(item.Count);
    }
    ViewBag.address = address.ToArray();
    ViewBag.counter = counter.ToArray();
}

<div class="chart-wrapper" style="height:200px;">
    <h2>Customer Address Scatter</h2>
    <canvas id="main-chart" class="chart" height="100"></canvas>
</div>
<div class="chart-wrapper" style="height:600px;margin-top:100px;">
    <canvas id="main-chart" class="chart" height="100"></canvas>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js">
</script>
<script>
    var ctx = document.getElementById("main-chart").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(ViewBag.address)),
            datasets: [{
                label: 'Customer Address',
                data: @Html.Raw(Json.Serialize(ViewBag.counter)),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>
